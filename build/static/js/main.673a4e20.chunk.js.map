{"version":3,"sources":["Pages/Home.js","Actions/networthActions.js","Pages/Chart.js","Actions/holdingActions.js","Model/orm.js","Selectors/selectors.js","Components/OrderBy.js","Components/Expansion.js","Pages/Table.js","State/holdingState.js","State/networthState.js","Reducers/rootReducer.js","Reducers/holdingReducer.js","Reducers/networthReducer.js","Store/store.js","Components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","props","Container","Jumbotron","style","textAlign","Row","Col","to","textDecoration","Card","Body","Title","color","size","receiveNetworth","data","console","log","type","networth","isLoading","getNetworthIfNeeded","dispatch","getState","length","Promise","resolve","fetch","method","then","response","json","dataProvider","map","d","startDate","Moment","format","endDate","subtract","formatedDate","traded_on","split","readableDateFormat","push","formatedTradedOn","join","isBetween","date","value","net_worth","payload","Chart","this","hasOwnProperty","undefined","config","chart","React","width","height","options","fluid","display","marginTop","marginLeft","Component","connect","state","selectItem","item","selectedItem","receiveHolding","holding","getHoldingIfNeeded","Holding","action","session","i","create","name","ticker","asset_class","avg_price","market_price","latest_chg_pct","market_value_ccy","isCollapsed","isSelected","all","attr","Model","modelName","orm","ORM","stateSelector","register","ascHoldings","createSelector","orderStatus","orderBy","toRefArray","holdings","h","id","OrderBy","onClick","onChange","status","Expansion","index","key","toFixed","TablePage","handleSort","orderStaus","onSelected","holdingsRef","dataList","Table","responsive","striped","bordered","isSorted","canopyReducer","combineReducers","intialState","Object","assign","createReducer","store","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMiddleware","loggerMiddleware","composeEnhancers","createStore","NavbarComponent","handleToggle","setState","open","handleClose","Navbar","variant","justifyContent","backgroundColor","Nav","className","float","items","path","Item","as","fontWeight","App","exact","component","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.673a4e20.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    Container,\n    Jumbotron,\n    Row,\n    Col,\n    Card\n} from 'react-bootstrap';\nimport { BarChartFill,Table } from 'react-bootstrap-icons';\nimport { Link } from 'react-router-dom';\n\n\nexport const HomePage = (props) => {\n    return (\n        <Container>\n            <Jumbotron style={{textAlign: 'center'}}>\n                <h1>Welcome</h1>\n                <p>\n                    This is a simple react application to show the <strong>Networth Chart</strong> and <strong>Holdings Table</strong>\n                </p>\n                <Row>\n                    <Col></Col>\n                    <Col>\n                        <Link to='/chart' style={{ textDecoration: 'none' }}>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title style={{ color: 'black'}}> <strong> Networth Chart </strong></Card.Title>\n                                    <BarChartFill color = \"rgba(26, 188, 156, 0.8)\" size = {50}/>\n                                </Card.Body>\n                            </Card>\n                        </Link> \n                        \n                    </Col>\n                    <Col>\n                        <Link to='/table' style={{ textDecoration: 'none'}}>\n                            <Card>\n                                <Card.Body>\n                                    <Card.Title style={{  color: 'black'}}> <strong>Holdings Table</strong> </Card.Title>\n                                    <Table color = \"rgba(26, 188, 156, 0.8)\" size = {50}/>\n                                </Card.Body>\n                            </Card>\n                        </Link>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Jumbotron>\n        </Container>\n    )\n}\n\nexport default HomePage;","import Moment from 'moment';\n\nexport const REQUEST_NETWORTH = 'REQUEST_NETWORTH';\nexport const RECEIVE_NETWORTH = 'RECEIVE_NETWORTH';\n\n\nexport const requestNetworth = () => {\n    return {\n        type: \"REQUEST_NETWORTH\",\n        networth: {\n            isLoading: true\n        }\n    }\n}\n\n\nconst receiveNetworth = (data) => {\n    console.log(data)\n    return {\n        type: \"RECEIVE_NETWORTH\",\n        networth: {\n            isLoading: false,\n            data: data\n        }\n    }\n}\n\n\nconst fetchNetworth = (state) => {\n    let url = `https://canopy-frontend-task.now.sh/api/networth`;\n    return dispatch => {\n        dispatch(requestNetworth())\n        fetch(url, {\n                method: \"GET\",\n            }).then(response => response.json())\n            .then(json => {\n                let dataProvider = []\n                json.map((d) => {\n                    let startDate = Moment().format(\"YYYY-MM-DD\");\n                    let endDate = Moment().subtract(1, 'y').format(\"YYYY-MM-DD\");\n                    let formatedDate = d.traded_on.split('-');\n                    let readableDateFormat = []\n                    readableDateFormat.push(formatedDate[2], formatedDate[1], formatedDate[0])\n                    let formatedTradedOn = readableDateFormat.join('-')\n                    if (Moment(formatedTradedOn).isBetween(endDate, startDate)) {\n                        dataProvider.push({\n                            date: Moment(formatedTradedOn).format(\"DD-MM-YYYY\"),\n                            value: d.net_worth\n                        });\n                    }\n                })\n                return dataProvider;\n            })\n            .then(payload => dispatch(receiveNetworth(payload)))\n    }\n}\n\nexport default receiveNetworth;\n\nconst shouldGetNetworthAgain = (state)=> {\n    if(state.networth.data.length) {\n        return false;\n    } else {\n        return true;\n    }\n}\n\nexport const getNetworthIfNeeded = () =>{\n    return (dispatch, getState) => {\n        if (shouldGetNetworthAgain(getState())) {\n            return dispatch(fetchNetworth(getState()))\n        } else {\n            return Promise.resolve()\n        }\n    }\n}","import React, { Component } from 'react';\nimport AmCharts from \"@amcharts/amcharts3-react\";\nimport { Container } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport { getNetworthIfNeeded } from '../Actions/networthActions';\n\nclass Chart extends Component {\n    \n    componentDidMount() {\n        const { dispatch } = this.props;\n        dispatch(getNetworthIfNeeded());\n    }\n    \n    render() {\n        const props = this.props;\n        const { dataProvider } = props;\n        if (this.props.isLoading) {\n            return <p>Loading…</p>;\n        } \n    \n        if (this.props.hasOwnProperty('dataProvider') && dataProvider !== undefined) {\n            const config = {\n                \"type\": \"serial\",\n                \"theme\": \"light\",\n                \"marginRight\": 40,\n                \"marginLeft\": 40,\n                \"autoMarginOffset\": 20,\n                \"mouseWheelZoomEnabled\": true,\n                \"valueAxes\": [{\n                    \"id\": \"v1\",\n                    \"axisAlpha\": 0,\n                    \"position\": \"left\",\n                    \"ignoreAxisWidth\": true\n                }],\n                \"balloon\": {\n                    \"borderThickness\": 1,\n                    \"shadowAlpha\": 0\n                },\n\n                \"graphs\": [{\n                    \"id\": \"g1\",\n                    \"balloon\": {\n                        \"drop\": true,\n                        \"adjustBorderColor\": false,\n                        \"color\": \"#ffffff\"\n                    },\n                    \"bullet\": \"round\",\n                    \"bulletBorderAlpha\": 1,\n                    \"bulletColor\": \"#FFFFFF\",\n                    \"bulletSize\": 5,\n                    \"hideBulletsCount\": 50,\n                    \"lineThickness\": 2,\n                    \"title\": \"red line\",\n                    \"useLineColorForBulletBorder\": true,\n                    \"valueField\": \"value\",\n                    \"balloonText\": \"<span style='font-size:18px;'>[[value]]</span>\"\n                }],\n                \"chartScrollbar\": {\n                    \"graph\": \"g1\",\n                    \"oppositeAxis\": false,\n                    \"offset\": 30,\n                    \"scrollbarHeight\": 80,\n                    \"backgroundAlpha\": 0,\n                    \"selectedBackgroundAlpha\": 0.1,\n                    \"selectedBackgroundColor\": \"#888888\",\n                    \"graphFillAlpha\": 0,\n                    \"graphLineAlpha\": 0.5,\n                    \"selectedGraphFillAlpha\": 0,\n                    \"selectedGraphLineAlpha\": 1,\n                    \"autoGridCount\": true,\n                    \"color\": \"#AAAAAA\"\n                },\n                \"chartCursor\": {\n                    \"pan\": true,\n                    \"valueLineEnabled\": true,\n                    \"valueLineBalloonEnabled\": true,\n                    \"cursorAlpha\": 1,\n                    \"cursorColor\": \"#258cbb\",\n                    \"limitToGraph\": \"g1\",\n                    \"valueLineAlpha\": 0.2,\n                    \"valueZoomable\": true\n                },\n                \"valueScrollbar\": {\n                    \"oppositeAxis\": false,\n                    \"offset\": 50,\n                    \"scrollbarHeight\": 10\n                },\n                \"categoryField\": \"date\",\n                \"dataProvider\": this.props.dataProvider\n            };\n            var chart = <AmCharts.React style={{ width: \"100%\", height: \"500px\" }} options={config} />\n        }\n\n        return (\n            <Container fluid>\n                <h3 style={{display: 'flex', marginTop: '1%', marginLeft: \"1%\"}}>Networth Chart</h3>\n                {chart}\n            </Container>\n        );\n  }\n}\n\nconst  mapStateToProps = (state) => {\n    return {\n        isLoading: state.networth.isLoading,\n        dataProvider: state.networth.data\n    }\n}\nexport default connect(mapStateToProps)(Chart);\n\n\n        ","export const REQUEST_HOLDING = 'REQUEST_HOLDING';\nexport const RECEIVE_HOLDING = 'RECEIVE_HOLDING';\nexport const SELECT_ORDER = 'SELECT_ORDER';\nexport const SELECT_ITEM = 'SELECT_ITEM';\n\nexport const requestHolding = () => {\n    return {\n        type: \"REQUEST_HOLDING\",\n        holding: {\n            isLoading: true\n        }\n    }\n}\n\nexport const selectOrder = () => {\n    return {\n        type: SELECT_ORDER\n    };\n};\n\nexport const selectItem = (item) => {\n    return {\n        type: SELECT_ITEM,\n        selectedItem: item\n    };\n};\n\nconst receiveHolding = (data) => {\n    return {\n        type: \"RECEIVE_HOLDING\",\n        holding: {\n            isLoading: false,\n            data: data.payload\n        }\n    }\n}\n\nexport const touchORM = (data) => {\n    return {\n        type: 'CREATE_HOLDING',\n        payload: data.holding.data\n    }\n}\nconst fetchHolding = (state) => {\n    let url = `https://canopy-frontend-task.now.sh/api/holdings`;\n    return dispatch => {\n        dispatch(requestHolding())\n        fetch(url, {\n                method: \"GET\",\n            }).then(response => response.json())\n            .then(json => dispatch(receiveHolding(json)))\n            .then(payload => dispatch(touchORM(payload)))\n    }\n}\n\nexport default receiveHolding;\n\nconst shouldGetHoldingsAgain = (state)=> {\n    if(state.holding.data.length) {\n        return false;\n    } else {\n        return true;\n    }\n}\n\nexport const getHoldingIfNeeded = () =>{\n    return (dispatch, getState) => {\n        if (shouldGetHoldingsAgain(getState())) {\n            return dispatch(fetchHolding(getState()))\n        } else {\n            return Promise.resolve()\n        }\n    }\n}","import { Model, attr, ORM } from 'redux-orm'\n\nexport class Holding extends Model {\n\n    static get fields() {\n        return {\n            name: attr(),\n            ticker: attr(),\n            asset_class: attr(),\n            avg_price: attr(),\n            market_price: attr(),\n            latest_chg_pct: attr(),\n            market_value_ccy: attr(),\n            isCollapsed: attr()\n        }\n    }\n\n    static reducer(action, Holding, session) {\n        switch (action.type) {\n            case 'CREATE_HOLDING': {\n                for(var i =0; i < action.payload.length; i++) {\n                    Holding.create({\n                        name: action.payload[i].name,\n                        ticker: action.payload[i].ticker,\n                        asset_class: action.payload[i].asset_class,\n                        avg_price: action.payload[i].avg_price,\n                        market_price: action.payload[i].market_price,\n                        latest_chg_pct: action.payload[i].latest_chg_pct,\n                        market_value_ccy: action.payload[i].market_value_ccy,\n                        isCollapsed: false,\n                        isSelected: false\n                    })\n                }\n                break\n            }\n            case 'REQUEST_ALL': {\n                console.log(Holding.all())\n                break\n            }\n            default: break\n        }\n  }\n}\nHolding.modelName = 'Holding'\n \nexport const orm = new ORM({\n    stateSelector: state => state.orm\n});\norm.register(Holding)\n\nexport default orm;","import { createSelector } from 'redux-orm';\nimport { orm } from \"../Model/orm\";\n\nconst getOrderStatus = state => state.holding.orderStatus;\nconst getSelectedItem = state => state.holding.selectedItem;\n\nexport const ascHoldings = createSelector(\n    [orm, getOrderStatus, getSelectedItem],\n    (session, orderStatus, item) => {\n        if(item === undefined) {\n            return session.Holding.orderBy(['asset_class'], [orderStatus]).toRefArray();\n        } // for initial loading \n        else {\n            let holdings = session.Holding.orderBy(['asset_class'], [orderStatus]).toRefArray();\n            holdings.map((h) => {\n                if (h.id === item.id) {\n                    h.isSelected = item.isSelected\n                }\n                if ((h.asset_class === item.asset_class && h.id !== item.id)) {\n                    h.isCollapsed = !h.isCollapsed;\n                }\n            });\n            return holdings;\n\n        }\n    }\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { CaretDownFill, CaretUpFill } from 'react-bootstrap-icons';\n\nclass OrderBy extends Component {\n    render() {\n        const props = this.props;\n        const onClick = () => {\n            props.onChange();\n        };\n        return (\n            <th onClick={onClick} > \n                Asset Class\n               { props.status === 'asc' ?<CaretUpFill/> : <CaretDownFill/>}\n            </th>\n        );\n    }\n}\nOrderBy.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    status: PropTypes.string.isRequired\n};\n\n\nexport default OrderBy;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { PlusSquareFill, DashSquareFill } from 'react-bootstrap-icons';\n\nclass Expansion extends Component {\n    render() {\n        const props = this.props;\n        const onClick = (item) => {\n            props.onChange(item)\n        };\n        var dataList = this.props.holdings.map((item, index) => (\n                <tr key={index} onClick={() => onClick(item)} style = {{ display: item.isCollapsed === false ? 'table-row' : 'none'}}> \n                    <td>{item.isSelected ? <PlusSquareFill/> : <DashSquareFill/> }</td>\n                    <td>{item.name}</td>\n                    <td>{item.ticker}</td>\n                    <td>{item.asset_class}</td>\n                    <td>{item.avg_price !== undefined && item.avg_price !== null ? item.avg_price.toFixed(2) : '-'}</td>\n                    <td>{item.market_price !== undefined && item.market_price !== null ? item.market_price.toFixed(2) : '-'}</td>\n                    <td>{item.latest_chg_pct}</td>\n                    <td>{item.market_value_ccy.toFixed(2)}</td>\n                </tr>\n            ))\n        return (\n            dataList\n            \n        );\n    }\n}\nExpansion.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    holdings: PropTypes.array.isRequired\n};\n\nexport default Expansion;","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { Container } from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table'\nimport { connect } from 'react-redux';\n\nimport { getHoldingIfNeeded, selectOrder,selectItem } from '../Actions/holdingActions';\nimport { ascHoldings } from '../Selectors/selectors';\n\nimport OrderBy from '../Components/OrderBy';\nimport Expansion from '../Components/Expansion';\n\nclass TablePage extends Component {\n    handleSort = (orderStaus) =>{\n        const { dispatch } = this.props;\n        dispatch(selectOrder());\n    }\n\n    onSelected = (item, holdings) => {\n        const { dispatch } = this.props;\n        dispatch(selectItem(item));\n    }\n    componentDidMount() {\n        const {dispatch} = this.props;\n        dispatch(getHoldingIfNeeded());\n    }\n\n    render() {\n        const props = this.props;\n        const { holdingsRef } = props;\n\n        if (this.props.isLoading) {\n            return <p>Loading…</p>;\n        } \n    \n        if (this.props.hasOwnProperty('holdingsRef') && holdingsRef !== undefined) {\n            var dataList = <Expansion onChange={this.onSelected} holdings={holdingsRef}></Expansion>;\n        }\n    return (\n        <Container fluid>\n            <h3 style={{display: 'flex', marginTop: '1%', marginLeft: \"1%\"}}>Holdings Table</h3>\n            <Table responsive=\"md\" striped bordered >\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>Name</th>\n                        <th>Ticker</th>\n                        <OrderBy onChange={this.handleSort} status={this.props.status}></OrderBy>\n                        <th>Avg Price</th>\n                        <th>Market Price</th>\n                        <th>Latest Change %</th>\n                        <th>Market Value in CCY</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {dataList}\n                </tbody>\n            </Table>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.holding.isLoading,\n        status: state.holding.orderStatus,\n        holdingsRef: ascHoldings(state)\n    }\n}\n\n\nexport default connect(mapStateToProps)(TablePage);\n","const holding = {\n    isLoading: false,\n    data: [],\n    orderStatus : 'asc',\n    isSorted: false,\n    selectedItem : {} \n}\nexport default holding;","const networth = {\n    isLoading: false,\n    data: []\n}\nexport default networth;","import { combineReducers } from 'redux';\nimport { createReducer } from 'redux-orm'\nimport { orm } from '../Model/orm'\n\nimport holding from './holdingReducer.js';\nimport networth from './networthReducer.js';\n\n// import orderStatus from './selectOrderReducer';\n\nconst canopyReducer = combineReducers({ \n    holding,\n    networth,\n    orm: createReducer(orm)\n})\nexport default canopyReducer;","import intialState from '../State/holdingState';\n\nexport default function holding(state = intialState, action) {\n    switch (action.type) {\n        case 'REQUEST_HOLDING':\n            return Object.assign({}, state, {\n                isLoading: action.holding.isLoading\n            })\n        case 'RECEIVE_HOLDING':\n            return Object.assign({}, state, {\n                isLoading: action.holding.isLoading,\n                data: action.holding.data\n            })\n        case 'SELECT_ORDER': \n            return Object.assign({}, state, {\n                orderStatus: state.orderStatus === 'asc' ? 'desc' : 'asc',\n                selectedItem: {}\n            })\n        case 'SELECT_ITEM': \n            return Object.assign({}, state, {\n                selectedItem: {\n                    isCollapsed: !action.selectedItem.isCollapsed,\n                    isSelected: !action.selectedItem.isCollapsed && !action.selectedItem.isSelected ? true: false,\n                    name: action.selectedItem.name,\n                    id: action.selectedItem.id,\n                    asset_class: action.selectedItem.asset_class,\n                    ticker: action.selectedItem.ticker,\n                    avg_price: action.selectedItem.avg_price,\n                    market_price: action.selectedItem.market_price,\n                    market_value_ccy: action.selectedItem.market_value_ccy\n                }\n            })\n        default:\n            return state\n    }\n}","import intialState from '../State/networthState';\n\nexport default function networth(state = intialState, action) {\n    switch (action.type) {\n        case 'REQUEST_NETWORTH':\n            return Object.assign({}, state, {\n                isLoading: action.networth.isLoading\n            })\n        case 'RECEIVE_NETWORTH':\n            console.log(action.networth, 'networth from reducer')\n            return Object.assign({}, state, {\n                isLoading: action.networth.isLoading,\n                data: action.networth.data\n            })\n        default:\n            return state\n    }\n}","import { applyMiddleware, createStore, compose} from 'redux';\nimport loggerMiddleware from 'redux-logger'; // to log the redux state\nimport thunkMiddleware from 'redux-thunk'; // to let dispatch function\nimport canopyReducer from '../Reducers/rootReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = composeEnhancers(\n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware\n    )\n)(createStore)(canopyReducer);\n\nexport default store;","import React, { Component } from 'react';\nimport {\n    Navbar,\n    Nav\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass NavbarComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        }\n    }\n    handleToggle = () => this.setState({ open: !this.state.open });\n    handleClose = () => this.setState({ open: false })\n    render() {\n        return (\n            <div>\n                <Navbar variant=\"dark\" style={{ justifyContent: 'center', backgroundColor: 'rgb(26,188,156,0.8)' }}>\n                    <Nav className=\"justify-content-end\" style={{ float: 'left' }}>\n                        {this.props.items.map((item, index) => (\n                            <Link key={index} to={item.path} style={{ textDecoration: 'none' }}>\n                                <Nav.Item className=\"nav-link\" as=\"li\" style={{ color: 'white', fontWeight: 'bold' }}>{item.name}</Nav.Item>\n                            </Link>\n                        ))}\n                    </Nav>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default NavbarComponent;","import React from 'react';\nimport { BrowserRouter as Router, Route }from \"react-router-dom\";\nimport { Provider } from 'react-redux';\n\nimport './custom.scss';\nimport Home from './Pages/Home';\nimport Chart from './Pages/Chart';\nimport Table from './Pages/Table';\nimport store from './Store/store.js';\nimport NavbarComponent from './Components/NavBar';\n\n\nconst items = [\n  {\n      name: 'Canopy',\n      path: '/'\n  },\n  {\n    name: 'Networth Chart',\n    path: '/chart'\n  },\n  {\n      name: 'Holdings Table',\n      path: '/table'\n  }\n];\nconst App = () => (\n    <Provider store={store}>\n        <Router>\n            <NavbarComponent items={items}/>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/table\" component={Table} />\n            <Route exact path=\"/Chart\" component={Chart} />\n        </Router>    \n    </Provider>\n  \n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}